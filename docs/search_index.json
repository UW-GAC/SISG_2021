[["gds-format.html", "2 GDS format 2.1 Convert a VCF to GDS 2.2 Exploring a GDS file 2.3 Exercises 2.4 Solutions", " 2 GDS format GDS is Genomic Data Structure, a storage format that can efficiently store genomic data and provide fast random access to subsets of the data. For more information on GDS for sequence data, read the SeqArray package vignette. 2.1 Convert a VCF to GDS To use the R packages developed at the University of Washington Genetic Analysis Center for sequence data, we first need to convert a VCF file to GDS. (If the file is BCF, use https://samtools.github.io/bcftools/bcftools.html to convert to VCF.) library(SeqArray) ## Loading required package: gdsfmt repo_path &lt;- &quot;https://github.com/UW-GAC/SISG_2021/raw/master&quot; if (!dir.exists(&quot;data&quot;)) dir.create(&quot;data&quot;) vcffile &lt;- &quot;data/1KG_phase3_subset_chr1.vcf.gz&quot; if (!file.exists(vcffile)) download.file(file.path(repo_path, vcffile), vcffile) gdsfile &lt;- &quot;data/1KG_phase3_subset_chr1.gds&quot; # convert the VCF to GDS seqVCF2GDS(vcffile, gdsfile, fmt.import=&quot;GT&quot;, storage.option=&quot;LZMA_RA&quot;, verbose=FALSE) 2.2 Exploring a GDS file We can interact with the GDS file using the SeqArray package. # open a connection to the GDS file gds &lt;- seqOpen(gdsfile) gds ## Object of class &quot;SeqVarGDSClass&quot; ## File: /Users/mconomos/Documents/SISG_2021/data/1KG_phase3_subset_chr1.gds (70.5K) ## + [ ] * ## |--+ description [ ] * ## |--+ sample.id { Str8 1126 LZMA_ra(9.66%), 877B } * ## |--+ variant.id { Int32 1120 LZMA_ra(17.5%), 793B } * ## |--+ position { Int32 1120 LZMA_ra(78.5%), 3.4K } * ## |--+ chromosome { Str8 1120 LZMA_ra(4.55%), 109B } * ## |--+ allele { Str8 1120 LZMA_ra(26.0%), 1.2K } * ## |--+ genotype [ ] * ## | |--+ data { Bit2 2x1126x1121 LZMA_ra(8.34%), 51.4K } * ## | |--+ extra.index { Int32 3x0 LZMA_ra, 18B } * ## | \\--+ extra { Int16 0 LZMA_ra, 18B } ## |--+ phase [ ] ## | |--+ data { Bit1 1126x1120 LZMA_ra(0.11%), 177B } * ## | |--+ extra.index { Int32 3x0 LZMA_ra, 18B } * ## | \\--+ extra { Bit1 0 LZMA_ra, 18B } ## |--+ annotation [ ] ## | |--+ id { Str8 1120 LZMA_ra(40.4%), 3.6K } * ## | |--+ qual { Float32 1120 LZMA_ra(2.46%), 117B } * ## | |--+ filter { Int32,factor 1120 LZMA_ra(2.46%), 117B } * ## | |--+ info [ ] ## | \\--+ format [ ] ## \\--+ sample.annotation [ ] The seqGetData function is the basic function for reading in data from a GDS file # the unique sample identifier comes from the VCF header sample.id &lt;- seqGetData(gds, &quot;sample.id&quot;) length(sample.id) ## [1] 1126 head(sample.id) ## [1] &quot;HG00096&quot; &quot;HG00097&quot; &quot;HG00099&quot; &quot;HG00100&quot; &quot;HG00101&quot; &quot;HG00102&quot; # a unique integer ID is assigned to each variant variant.id &lt;- seqGetData(gds, &quot;variant.id&quot;) length(variant.id) ## [1] 1120 head(variant.id) ## [1] 1 2 3 4 5 6 chr &lt;- seqGetData(gds, &quot;chromosome&quot;) head(chr) ## [1] &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; pos &lt;- seqGetData(gds, &quot;position&quot;) head(pos) ## [1] 970546 985900 1025045 1265550 1472676 1735725 id &lt;- seqGetData(gds, &quot;annotation/id&quot;) head(id) ## [1] &quot;&quot; &quot;rs17160776&quot; &quot;&quot; &quot;&quot; &quot;rs78293298&quot; ## [6] &quot;&quot; There are additional useful functions for summary level data. # reference allele frequency of each variant afreq &lt;- seqAlleleFreq(gds) head(afreq) ## [1] 0.9960036 0.9507105 0.9995560 0.9991119 0.9928952 0.9977798 summary(afreq) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0000 0.9866 0.9987 0.9436 0.9996 1.0000 hist(afreq, breaks=50) We can define a filter on the gds object. After using the seqSetFilter command, all subsequent reads from the gds object are restricted to the selected subset of data, until a new filter is defined or seqResetFilter is called. seqSetFilter(gds, variant.id=91:100, sample.id=sample.id[1:5]) ## # of selected samples: 5 ## # of selected variants: 10 Genotype data is stored in a 3-dimensional array, where the first dimension is always length 2 for diploid genotypes. The second and third dimensions are samples and variants, respectively. The values of the array denote alleles: 0 is the reference allele and 1 is the alternate allele. For multiallelic variants, other alternate alleles are represented as integers &gt; 1. geno &lt;- seqGetData(gds, &quot;genotype&quot;) dim(geno) ## [1] 2 5 10 geno[,,1:2] ## , , 1 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 1 1 1 1 1 ## [2,] 1 1 1 1 1 ## ## , , 2 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 0 0 0 0 0 ## [2,] 0 1 0 0 1 The SeqVarTools package has some additional functions for interacting with SeqArray-format GDS files. There are functions providing more intuitive ways to read in genotypes. library(SeqVarTools) # return genotypes in matrix format getGenotype(gds) ## variant ## sample 91 92 93 94 95 96 97 98 99 100 ## HG00096 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00097 &quot;1|1&quot; &quot;0|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00099 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00100 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00101 &quot;1|1&quot; &quot;0|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; getGenotypeAlleles(gds) ## variant ## sample 91 92 93 94 95 96 97 98 99 100 ## HG00096 &quot;G|G&quot; &quot;T|T&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;C|C&quot; &quot;T|T&quot; ## HG00097 &quot;G|G&quot; &quot;T|C&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|C&quot; &quot;C|C&quot; &quot;T|T&quot; ## HG00099 &quot;G|G&quot; &quot;T|T&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|C&quot; &quot;C|C&quot; &quot;T|T&quot; ## HG00100 &quot;G|G&quot; &quot;T|T&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;C|C&quot; &quot;C|C&quot; &quot;T|T&quot; ## HG00101 &quot;G|G&quot; &quot;T|C&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;C|C&quot; &quot;C|C&quot; &quot;T|T&quot; refDosage(gds) ## variant ## sample 91 92 93 94 95 96 97 98 99 100 ## HG00096 0 2 2 2 2 2 2 0 2 2 ## HG00097 0 1 2 2 2 2 2 1 2 2 ## HG00099 0 2 2 2 2 2 2 1 2 2 ## HG00100 0 2 2 2 2 2 2 2 2 2 ## HG00101 0 1 2 2 2 2 2 2 2 2 altDosage(gds) ## variant ## sample 91 92 93 94 95 96 97 98 99 100 ## HG00096 2 0 0 0 0 0 0 2 0 0 ## HG00097 2 1 0 0 0 0 0 1 0 0 ## HG00099 2 0 0 0 0 0 0 1 0 0 ## HG00100 2 0 0 0 0 0 0 0 0 0 ## HG00101 2 1 0 0 0 0 0 0 0 0 There are functions to extract variant information. # look at reference and alternate alleles refChar(gds) ## [1] &quot;A&quot; &quot;T&quot; &quot;G&quot; &quot;G&quot; &quot;G&quot; &quot;A&quot; &quot;C&quot; &quot;C&quot; &quot;C&quot; &quot;T&quot; altChar(gds) ## [1] &quot;G&quot; &quot;C&quot; &quot;A&quot; &quot;A&quot; &quot;A&quot; &quot;G&quot; &quot;T&quot; &quot;G&quot; &quot;A&quot; &quot;C&quot; # data.frame of variant information variantInfo(gds) ## variant.id chr pos ref alt ## 1 91 1 15461365 A G ## 2 92 1 15817319 T C ## 3 93 1 16150840 G A ## 4 94 1 16272296 G A ## 5 95 1 16300899 G A ## 6 96 1 16353896 A G ## 7 97 1 16414772 C T ## 8 98 1 16446764 C G ## 9 99 1 16448267 C A ## 10 100 1 16699413 T C # reset the filter to all variants and samples seqResetFilter(gds) ## # of selected samples: 1,126 ## # of selected variants: 1,120 # how many alleles for each variant? n &lt;- seqNumAllele(gds) table(n) ## n ## 2 3 4 ## 1099 20 1 # some variants have more than one alternate allele multi.allelic &lt;- which(n &gt; 2) altChar(gds)[multi.allelic] ## [1] &quot;GT,G&quot; &quot;G,T&quot; &quot;A,T&quot; &quot;A,T&quot; ## [5] &quot;ATG,ATGTG&quot; &quot;C,G&quot; &quot;A,T&quot; &quot;C,T&quot; ## [9] &quot;A,C&quot; &quot;TAA,T&quot; &quot;GTTA,GTTT&quot; &quot;GCC,GCCC,G&quot; ## [13] &quot;A,C&quot; &quot;A,C&quot; &quot;A,C&quot; &quot;CAAGCAT,CGAGCAT&quot; ## [17] &quot;CATTATT,C&quot; &quot;AT,C&quot; &quot;TGTGA,C&quot; &quot;CCATT,CCATTCATT&quot; ## [21] &quot;C,G&quot; # extract a particular alternate allele # first alternate altChar(gds, n=1)[multi.allelic] ## [1] &quot;GT&quot; &quot;G&quot; &quot;A&quot; &quot;A&quot; &quot;ATG&quot; &quot;C&quot; &quot;A&quot; ## [8] &quot;C&quot; &quot;A&quot; &quot;TAA&quot; &quot;GTTA&quot; &quot;GCC&quot; &quot;A&quot; &quot;A&quot; ## [15] &quot;A&quot; &quot;CAAGCAT&quot; &quot;CATTATT&quot; &quot;AT&quot; &quot;TGTGA&quot; &quot;CCATT&quot; &quot;C&quot; # second alternate altChar(gds, n=2)[multi.allelic] ## [1] &quot;G&quot; &quot;T&quot; &quot;T&quot; &quot;T&quot; &quot;ATGTG&quot; &quot;G&quot; ## [7] &quot;T&quot; &quot;T&quot; &quot;C&quot; &quot;T&quot; &quot;GTTT&quot; &quot;GCCC&quot; ## [13] &quot;C&quot; &quot;C&quot; &quot;C&quot; &quot;CGAGCAT&quot; &quot;C&quot; &quot;C&quot; ## [19] &quot;C&quot; &quot;CCATTCATT&quot; &quot;G&quot; # how many variants are biallelic SNVs? table(isSNV(gds, biallelic=TRUE)) ## ## FALSE TRUE ## 110 1010 # how many variants are SNVs vs INDELs? table(isSNV(gds, biallelic=FALSE)) ## ## FALSE TRUE ## 99 1021 # 11 SNVs are multi-allelic We can also return variant information as a GRanges object from the GenomicRanges package. This format for representing sequence data is common across many Bioconductor packages. Chromosome is stored in the seqnames column. The ranges column has variant position, which can be a single base pair or a range. gr &lt;- granges(gds) gr ## GRanges object with 1120 ranges and 0 metadata columns: ## seqnames ranges strand ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; ## 1 1 970546 * ## 2 1 985900 * ## 3 1 1025045 * ## 4 1 1265550 * ## 5 1 1472676 * ## ... ... ... ... ## 1116 1 248715186 * ## 1117 1 248715606-248715610 * ## 1118 1 248761613 * ## 1119 1 248894546 * ## 1120 1 249149558 * ## ------- ## seqinfo: 1 sequence from an unspecified genome; no seqlengths 2.3 Exercises Set a filter selecting only multi-allelic variants. Inspect their genotypes using the different methods you learned above. Use the alleleDosage method to find dosage for the second (and third, etc.) alternate allele. Use the hwe function in SeqVarTools to run a Hardy-Weinberg Equilibrium test on each variant. Identify a variant with low p-value and inspect its genotypes. (Note that the HWE test is only valid for biallelic variants, and will return NA for multiallelic variants.) 2.4 Solutions Set a filter selecting only multi-allelic variants. Inspect their genotypes using the different methods you learned above. Use the alleleDosage method to find dosage for the second (and third, etc.) alternate allele. seqSetFilter(gds, variant.sel=multi.allelic) ## # of selected variants: 21 geno &lt;- seqGetData(gds, &quot;genotype&quot;) dim(geno) ## [1] 2 1126 21 geno[,1:5,1:5] ## , , 1 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 1 1 0 1 1 ## [2,] 0 1 1 1 1 ## ## , , 2 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 0 0 0 0 0 ## [2,] 0 0 0 0 0 ## ## , , 3 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 0 0 0 0 0 ## [2,] 0 0 0 0 0 ## ## , , 4 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 0 1 0 ## [2,] 0 0 0 0 1 ## ## , , 5 ## ## sample ## allele [,1] [,2] [,3] [,4] [,5] ## [1,] 0 0 0 0 0 ## [2,] 0 0 0 0 0 geno &lt;- getGenotype(gds) dim(geno) ## [1] 1126 21 head(geno) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 434 ## HG00096 &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|1&quot; ## HG00097 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|2&quot; &quot;0|1&quot; ## HG00099 &quot;0|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; ## HG00100 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|2&quot; &quot;0|1&quot; ## HG00101 &quot;1|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|0&quot; &quot;1|1&quot; &quot;0|0&quot; ## HG00102 &quot;0|1&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|2&quot; &quot;0|1&quot; ## variant ## sample 610 627 645 689 756 765 814 988 1014 1056 ## HG00096 &quot;3|3&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|0&quot; &quot;2|2&quot; &quot;2|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00097 &quot;1|3&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|2&quot; &quot;2|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00099 &quot;1|3&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|2&quot; &quot;2|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; ## HG00100 &quot;1|1&quot; &quot;2|0&quot; &quot;0|0&quot; &quot;0|2&quot; &quot;2|2&quot; &quot;2|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|2&quot; ## HG00101 &quot;3|0&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|0&quot; &quot;2|2&quot; &quot;2|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;1|0&quot; &quot;0|0&quot; ## HG00102 &quot;3|3&quot; &quot;0|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;2|2&quot; &quot;1|2&quot; &quot;0|0&quot; &quot;0|0&quot; &quot;0|1&quot; &quot;0|2&quot; geno &lt;- getGenotypeAlleles(gds) head(geno) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 ## HG00096 &quot;GT|GTT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;A|G&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;T|T&quot; &quot;TAA|TA&quot; ## HG00097 &quot;GT|GT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;T|T&quot; &quot;T|T&quot; ## HG00099 &quot;GTT|GT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;T|T&quot; &quot;TA|TA&quot; ## HG00100 &quot;GT|GT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;A|G&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;T|T&quot; &quot;TA|T&quot; ## HG00101 &quot;GT|GT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;G|A&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;C|T&quot; &quot;TAA|TAA&quot; ## HG00102 &quot;GTT|GT&quot; &quot;A|A&quot; &quot;G|G&quot; &quot;A|G&quot; &quot;A|A&quot; &quot;A|A&quot; &quot;C|C&quot; &quot;G|G&quot; &quot;T|T&quot; &quot;T|T&quot; ## variant ## sample 434 610 627 645 689 756 765 ## HG00096 &quot;G|GTTA&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;C|G&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;C|C&quot; ## HG00097 &quot;G|GTTA&quot; &quot;GCC|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;C|C&quot; ## HG00099 &quot;GTTA|G&quot; &quot;GCC|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;C|C&quot; ## HG00100 &quot;G|GTTA&quot; &quot;GCC|GCC&quot; &quot;C|G&quot; &quot;G|G&quot; &quot;G|C&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;C|C&quot; ## HG00101 &quot;G|G&quot; &quot;G|GC&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;C|G&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;C|C&quot; ## HG00102 &quot;G|GTTA&quot; &quot;G|G&quot; &quot;G|C&quot; &quot;G|G&quot; &quot;G|G&quot; &quot;CGAGCAT|CGAGCAT&quot; &quot;CATTATT|C&quot; ## variant ## sample 814 988 1014 1056 ## HG00096 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;C|C&quot; &quot;A|A&quot; ## HG00097 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;C|C&quot; &quot;A|A&quot; ## HG00099 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;C|C&quot; &quot;A|A&quot; ## HG00100 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;C|C&quot; &quot;A|G&quot; ## HG00101 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;CCATT|C&quot; &quot;A|A&quot; ## HG00102 &quot;CT|CT&quot; &quot;CGTGA|CGTGA&quot; &quot;C|CCATT&quot; &quot;A|G&quot; # count of reference alleles dos &lt;- refDosage(gds) head(dos) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 434 610 627 645 689 756 765 814 ## HG00096 1 2 2 1 2 2 2 2 2 1 1 0 2 2 1 0 0 2 ## HG00097 0 2 2 2 2 2 2 2 2 0 1 0 2 2 2 0 0 2 ## HG00099 1 2 2 2 2 2 2 2 2 2 1 0 2 2 2 0 0 2 ## HG00100 0 2 2 1 2 2 2 2 2 1 1 0 1 2 1 0 0 2 ## HG00101 0 2 2 1 2 2 2 2 1 0 2 1 2 2 1 0 0 2 ## HG00102 1 2 2 1 2 2 2 2 2 0 1 0 1 2 2 0 0 2 ## variant ## sample 988 1014 1056 ## HG00096 2 2 2 ## HG00097 2 2 2 ## HG00099 2 2 2 ## HG00100 2 2 1 ## HG00101 2 1 2 ## HG00102 2 1 1 # count of *any* alternate alleles dos &lt;- altDosage(gds) head(dos) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 434 610 627 645 689 756 765 814 ## HG00096 1 0 0 1 0 0 0 0 0 1 1 2 0 0 1 2 2 0 ## HG00097 2 0 0 0 0 0 0 0 0 2 1 2 0 0 0 2 2 0 ## HG00099 1 0 0 0 0 0 0 0 0 0 1 2 0 0 0 2 2 0 ## HG00100 2 0 0 1 0 0 0 0 0 1 1 2 1 0 1 2 2 0 ## HG00101 2 0 0 1 0 0 0 0 1 2 0 1 0 0 1 2 2 0 ## HG00102 1 0 0 1 0 0 0 0 0 2 1 2 1 0 0 2 2 0 ## variant ## sample 988 1014 1056 ## HG00096 0 0 0 ## HG00097 0 0 0 ## HG00099 0 0 0 ## HG00100 0 0 1 ## HG00101 0 1 0 ## HG00102 0 1 1 # count of the first alternate allele dos &lt;- alleleDosage(gds, n=1) head(dos) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 434 610 627 645 689 756 765 814 ## HG00096 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 ## HG00097 2 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 ## HG00099 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 ## HG00100 2 0 0 1 0 0 0 0 0 0 1 2 0 0 0 0 0 0 ## HG00101 2 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 ## HG00102 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 ## variant ## sample 988 1014 1056 ## HG00096 0 0 0 ## HG00097 0 0 0 ## HG00099 0 0 0 ## HG00100 0 0 0 ## HG00101 0 1 0 ## HG00102 0 1 0 # count of the third alternate allele dos &lt;- alleleDosage(gds, n=3) head(dos) ## variant ## sample 30 69 73 161 162 195 243 253 407 431 434 610 627 645 689 756 765 814 ## HG00096 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 ## HG00097 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ## HG00099 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ## HG00100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## HG00101 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ## HG00102 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 ## variant ## sample 988 1014 1056 ## HG00096 0 0 0 ## HG00097 0 0 0 ## HG00099 0 0 0 ## HG00100 0 0 0 ## HG00101 0 0 0 ## HG00102 0 0 0 # count of *each* of the alternate alleles # returns multiple columns per variant dos &lt;- expandedAltDosage(gds) head(dos) ## variant ## sample 30 30 69 69 73 73 161 161 162 162 195 195 243 243 253 253 407 407 431 ## HG00096 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ## HG00097 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## HG00099 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## HG00100 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ## HG00101 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 ## HG00102 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ## variant ## sample 431 434 434 610 610 610 627 627 645 645 689 689 756 756 765 765 814 ## HG00096 0 1 0 0 0 2 0 0 0 0 0 1 0 2 0 2 0 ## HG00097 2 1 0 1 0 1 0 0 0 0 0 0 0 2 0 2 0 ## HG00099 0 1 0 1 0 1 0 0 0 0 0 0 0 2 0 2 0 ## HG00100 1 1 0 2 0 0 0 1 0 0 0 1 0 2 0 2 0 ## HG00101 0 0 0 0 0 1 0 0 0 0 0 1 0 2 0 2 0 ## HG00102 2 1 0 0 0 2 0 1 0 0 0 0 0 2 1 1 0 ## variant ## sample 814 988 988 1014 1014 1056 1056 ## HG00096 0 0 0 0 0 0 0 ## HG00097 0 0 0 0 0 0 0 ## HG00099 0 0 0 0 0 0 0 ## HG00100 0 0 0 0 0 0 1 ## HG00101 0 0 0 1 0 0 0 ## HG00102 0 0 0 1 0 0 1 Use the hwe function in SeqVarTools to run a Hardy-Weinberg Equilibrium test on each variant. Identify a variant with low p-value and inspect its genotypes. (Note that the HWE test is only valid for biallelic variants, and will return NA for multiallelic variants.) seqResetFilter(gds) ## # of selected samples: 1,126 ## # of selected variants: 1,120 # run HWE test hwe.res &lt;- hwe(gds) # identify variants with small p-values lowp &lt;- !is.na(hwe.res$p) &amp; hwe.res$p &lt; 1e-4 head(hwe.res[lowp,]) ## variant.id nAA nAa naa afreq p f ## 75 75 702 336 88 0.7726465 1.070663e-06 0.1506466 ## 92 92 632 381 113 0.7304618 3.558878e-06 0.1407120 ## 98 98 672 335 119 0.7455595 2.369695e-12 0.2158342 ## 105 105 93 272 761 0.2033748 7.851777e-16 0.2544970 ## 114 114 299 482 345 0.4795737 1.745346e-06 0.1424409 ## 150 150 471 447 208 0.6167851 8.020208e-08 0.1602251 # look at the genotypes of the most significant variant minp &lt;- which.min(hwe.res$p) hwe.res[minp,] ## variant.id nAA nAa naa afreq p f ## 608 608 76 1048 2 0.5328597 5.211823e-234 -0.8695311 seqSetFilter(gds, variant.id=minp) ## # of selected variants: 1 table(getGenotype(gds)) ## ## 0|0 0|1 1|0 1|1 ## 76 559 489 2 table(altDosage(gds)) ## ## 0 1 2 ## 76 1048 2 Always use the seqClose command to close your connection to a GDS file when you are done working with it. Trying to open an already opened GDS will result in an error. seqClose(gds) "]]
